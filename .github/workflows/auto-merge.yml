name: Auto-Merge Owner's PRs

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: github.actor == 'dallae'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Pull Request Details
        id: pr_details
        run: |
          echo "Pull Request Number: ${{ github.event.pull_request.number }}"
          echo "Pull Request Title: ${{ github.event.pull_request.title }}"
          echo "Pull Request URL: ${{ github.event.pull_request.html_url }}"

      - name: Check Status Checks
        run: |
          echo "Checking status checks..."
          # Use GitHub CLI or API to fetch and log status checks
          gh pr checks ${{ github.event.pull_request.number }} --repo ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Approvals
        run: |
          echo "Checking approvals..."
          # Use GitHub CLI or API to fetch and log approval status
          gh pr view ${{ github.event.pull_request.number }} --json reviews --repo ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Branch Protection Rules
        run: |
          echo "Checking branch protection rules..."
          # Use GitHub CLI or API to fetch and log branch protection rules
          gh api /repos/${{ github.repository }}/branches/${{ github.event.pull_request.base.ref }}/protection
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable Auto-Merge
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            await github.graphql(
              `mutation ($prId: ID!, $mergeType: PullRequestMergeMethod!) {
                enablePullRequestAutoMerge(input: {
                  pullRequestId: $prId,
                  mergeMethod: $mergeType
                }) { clientMutationId }
              }`,
              { prId: pr.node_id, mergeType: "REBASE" }
            );
