name: Auto-Merge Owner's PRs

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: github.actor == 'dallae'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Pull Request Details
        id: pr_details
        run: |
          echo "Pull Request Number: ${{ github.event.pull_request.number }}"
          echo "Pull Request Title: ${{ github.event.pull_request.title }}"
          echo "Pull Request URL: ${{ github.event.pull_request.html_url }}"

      - name: Check Status Checks
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: checks } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.pull_request.head.sha
            });
            console.log("Status Checks:", checks);

      - name: Check Approvals
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            console.log("Reviews:", reviews);

      - name: Check Branch Protection Rules
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: branchProtection } = await github.rest.repos.getBranchProtection({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: context.payload.pull_request.base.ref
            });
            console.log("Branch Protection Rules:", branchProtection);

      - name: Enable Auto-Merge
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            await github.graphql(
              `mutation ($prId: ID!, $mergeType: PullRequestMergeMethod!) {
                enablePullRequestAutoMerge(input: {
                  pullRequestId: $prId,
                  mergeMethod: $mergeType
                }) { clientMutationId }
              }`,
              { prId: pr.node_id, mergeType: "REBASE" }
            );
